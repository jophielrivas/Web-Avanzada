version: '3.8'

networks:  
  red-app:


services:

  elasticsearch:
    image: elasticsearch:7.8.1
    restart: always
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      discovery.type: single-node
    networks:
      - red-app
      
  kibana:
    image: kibana:7.8.1
    restart: always
    ports:
      - 5601:5601
    networks:
      - red-app
    depends_on:
      - elasticsearch
      - user-microservice

  servidor-configuracion:
    build:
      context: ./servidor-configuracion
      dockerfile: Dockerfile
    environment:
      - EUREKA-SERVER=servidor-eureka
    ports: 
      - 8888:8888
    networks:
      - red-app

  servidor-eureka:
    build: ./servidor-eureka
    restart: always
    environment:
      - CONFIG-SERVER=servidor-configuracion
    ports: 
      - 8761:8761
    depends_on:
      - servidor-configuracion
    networks:
      - red-app

  servidor-perimetral:
    build: ./servidor-perimetral
    restart: always
    environment:
      - CONFIG-SERVER=servidor-configuracion
      - EUREKA-SERVER=servidor-eureka
    ports:
      - 8080:8080
    networks:
      - red-app
    depends_on:
      - servidor-eureka

  app-web:      
    build: 
      context: WebApp/
      dockerfile: Dockerfile
    restart: always
    ports:          
      - 8181:8181
    environment:    
      - NOMBRE_APP=Prueba
      - CONFIG-SERVER=servidor-configuracion
      - EUREKA-SERVER=servidor-eureka
    depends_on:   
      - servidor-perimetral
      - user-microservice
      - mail-microservice
    networks:
      - red-app

  user-microservice:
    build: 
      context: usuarios-microservice/
      dockerfile: Dockerfile 
    restart: always
    environment:
      - APPLICATION_PORT=8080
      - CONFIG-SERVER=servidor-configuracion
      - EUREKA-SERVER=servidor-eureka
      - DB_HOST=user-db
    depends_on:
      - user-db
    networks:
      - red-app

      
  events-microservice:
    build: 
      context: eventos-microservice/
      dockerfile: Dockerfile
    restart: always
    environment:
      - APPLICATION_PORT=8080
      - CONFIG-SERVER=servidor-configuracion
      - EUREKA-SERVER=servidor-eureka
      - DB_HOST=events-db
    depends_on:
      - events-db
    networks:
      - red-app
    
  mail-microservice:
    build: 
      context: mail-microservice/
      dockerfile: Dockerfile 
    restart: always
    environment:
      - APPLICATION_PORT=8080
      - CONFIG-SERVER=servidor-configuracion
      - EUREKA-SERVER=servidor-eureka
    depends_on:
      - mail-db
    networks:
      - red-app
    
  user-db:
    image: mysql:5.7.26
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=12345678
      - MYSQL_USER=ADMIN
      - MYSQL_DATABASE=User-DB
    volumes:   
      - ~/data_mysql/user:/var/lib/mysql
    networks:
      - red-app

  mail-db:
    image: mysql:5.7.26
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=12345678
      - MYSQL_USER=ADMIN
      - MYSQL_DATABASE=Mail-DB
    volumes:   
      - ~/data_mysql/mail:/var/lib/mysql
    networks:
      - red-app
    
  events-db:
    image: mysql:5.7.26
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=12345678
      - MYSQL_USER=ADMIN
      - MYSQL_DATABASE=Events-DB
    volumes:   
      - ~/data_mysql/events:/var/lib/mysql
    networks:
      - red-app

